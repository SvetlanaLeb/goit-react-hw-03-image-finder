{"version":3,"sources":["components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/imageAPI.js","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","Searchbar","state","query","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","warn","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","onClick","src","alt","ImageGallery","data","onImageClick","map","id","imageApi","newName","pageNumber","fetch","then","response","ok","json","Promise","reject","Error","Button","onLoadClick","s","btnLoadMore","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleBackDropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","requestName","currentPage","loading","error","showModal","modalImage","fetchImg","result","prevState","hits","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","handleFormSubmit","handleModalOpen","handleModalClose","prevProps","message","length","color","height","width","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de7a4ae0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLoadMore\":\"Button_btnLoadMore__2Xnst\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Searchbar.css';\n\nclass Searchbar extends Component {\n    state = {\n        query: '',\n    };\n\n    handleNameChange = e => {\n        this.setState({\n            query: e.currentTarget.value.toLowerCase(),\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.query.trim() === '') {\n            toast.warn('Enter your request');\n            return;\n        }\n        this.props.onSubmit(this.state.query);\n        this.setState({ query: '' });\n    };\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={this.state.query}\n                        onChange={this.handleNameChange}\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, tags, onClick }) => (\n    <li className=\"ImageGalleryItem\">\n        <img\n            src={webformatURL}\n            alt={tags}\n            className=\"ImageGalleryItem-image\"\n            onClick={() => onClick(largeImageURL)}\n        />\n    </li>\n);\n\nImageGalleryItem.propTypes = {\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nconst ImageGallery = ({ data, onImageClick }) => (\n    <ul className=\"ImageGallery\">\n        {data &&\n            data.map(({ id, webformatURL, largeImageURL, tags }) => (\n                <ImageGalleryItem\n                    key={id}\n                    webformatURL={webformatURL}\n                    largeImageURL={largeImageURL}\n                    tags={tags}\n                    onClick={onImageClick}\n                />\n            ))}\n    </ul>\n);\n\nImageGallery.propTypes = {\n    data: PropTypes.oneOfType([\n        PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.string.isRequired,\n                webformatURL: PropTypes.string.isRequired,\n                largeImageURL: PropTypes.string.isRequired,\n                tags: PropTypes.string.isRequired,\n            }),\n        ),\n        PropTypes.array,\n    ]),\n    onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","const imageApi = (newName, pageNumber) => {\n    const KEY = '22384127-56cbd68b25450c364ed3164a8';\n\n    return fetch(\n        `https://pixabay.com/api/?q=${newName}&page=${pageNumber}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    ).then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return Promise.reject(\n            new Error(`No results were found for ${newName} `),\n        );\n    });\n};\n\nexport default imageApi;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onLoadClick }) => {\n    return (\n        <button className={s.btnLoadMore} type=\"button\" onClick={onLoadClick}>\n            Load more\n        </button>\n    );\n};\n\nButton.propTypes = {\n    onLoadClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n    state = {};\n    componentDidMount() {\n        window.addEventListener('keydown', e => {\n            this.handleKeydown(e);\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', e => {\n            this.handleKeydown(e);\n        });\n    }\n\n    handleKeydown = e => {\n        if (e.code === 'Escape') {\n            this.props.onClose();\n        }\n    };\n    handleBackDropClick = e => {\n        if (e.currentTarget === e.target) {\n            this.props.onClose();\n        }\n    };\n\n    render() {\n        return createPortal(\n            <div className=\"Overlay\" onClick={this.handleBackDropClick}>\n                <div className=\"Modal\">{this.props.children}</div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\n\nModal.propTypes = {\n    children: PropTypes.node,\n    onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport imageApi from './services/imageAPI';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n    state = {\n        requestName: '',\n        data: null,\n        currentPage: 1,\n        loading: false,\n        error: null,\n        showModal: false,\n        modalImage: '',\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const prevName = prevState.requestName;\n        const newName = this.state.requestName;\n\n        if (prevName !== newName) {\n            this.fetchImg();\n        }\n    }\n\n    fetchImg = () => {\n        if (!this.state.requestName) return;\n        this.setState({ loading: true });\n        const { requestName, currentPage } = this.state;\n        imageApi(requestName, currentPage)\n            .then(result => {\n                return this.setState(prevState => ({\n                    data: [...prevState.data, ...result.hits],\n                    currentPage: prevState.currentPage + 1,\n                }));\n            })\n            .catch(error => this.setState({ error }))\n            .finally(() => this.setState({ loading: false }));\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    };\n    handleFormSubmit = requestName => {\n        this.setState({ requestName: requestName, data: [], currentPage: 1 });\n    };\n\n    handleModalOpen = largeImageURL => {\n        this.setState({ showModal: true, modalImage: largeImageURL });\n    };\n\n    handleModalClose = () => {\n        this.setState({ showModal: false, modalImage: '' });\n    };\n\n    render() {\n        const { data, error, loading, modalImage, showModal } = this.state;\n\n        return (\n            <div className=\"App\">\n                <Searchbar onSubmit={this.handleFormSubmit} />\n                {error && <h2>{error.message}</h2>}\n                {data && data.length === 0 && loading === false && (\n                    <h2>No results were found for your search</h2>\n                )}\n                {data && (\n                    <ImageGallery\n                        data={data}\n                        onImageClick={this.handleModalOpen}\n                    />\n                )}\n                {data && data.length !== 0 && (\n                    <Button onLoadClick={this.fetchImg} />\n                )}\n                {loading && (\n                    <Loader\n                        type=\"ThreeDots\"\n                        color=\"blueviolet\"\n                        height={80}\n                        width={80}\n                        className=\"Loader\"\n                    />\n                )}\n                {showModal && (\n                    <Modal\n                        modalImage={modalImage}\n                        onClose={this.handleModalClose}\n                    >\n                        <img src={modalImage} alt=\"\" />\n                    </Modal>\n                )}\n                <ToastContainer\n                    position=\"top-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}